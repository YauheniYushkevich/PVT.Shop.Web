@model PVT.Shop.Infrastructure.Common.ViewModels.CategoryForEditViewModel
@{
    ViewBag.Title = "EditCategory";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h2>@(Model.Category.Id == 0 ? "New Category" : $"Edit category {Model.Category.Name}")</h2>
    <hr class="divider"/>
    @using (Html.BeginForm())
    {
        @Html.HiddenFor(c => c.Category.Id)
        <div class="form-group">
            @Html.LabelFor(c => c.Category.Name)
            @Html.TextBoxFor(c => c.Category.Name, new { @class = "form-control", @style = "max-width: none" })
            @Html.ValidationMessageFor(c => c.Category.Name)
        </div>

        <div class="form-group">
            @Html.LabelFor(c => c.Category.Parent)
            @Html.DropDownListFor(c => c.Category.Parent.Id,
                new SelectList(Model.Categories.Select(c => new { Text = c.Name, Value = c.Id.ToString() }), "Value", "Text"),
                new { @class = "form-control" })
        </div>

        <div class="form-group ">
            @Html.LabelFor(c => c.Category.Description)
            @Html.TextAreaFor(c => c.Category.Description, new { @class = "form-control", @style = "max-width: none" })
        </div>

        <div class="form-group ">
            @Html.LabelFor(c => c.Category.Icon)
            @Html.TextBoxFor(c => c.Category.Icon, new { @class = "form-control", @style = "max-width: none" })
        </div>

        <table class="table table-striped table-responsive">
            <thead>
            <tr>
                <th>Property</th>
                <th>Description</th>
                <th>Action</th>
            </tr>
            </thead>
            <tbody class="properties">
            @{
                if(Model.Category.Properties != null)
                {
                    var i = 0;
                    foreach (var property in Model.Category.Properties)
                    {
                    <tr id="@i" title="">
                        <td>
                        @Html.HiddenFor(c => property.Id)
                        @Html.EditorFor(c => property.Name)
                        @Html.ValidationMessageFor(c => property.Name)

                        <td>@Html.TextAreaFor(c => property.Description)</td>
                        <td>
                            <a href="#" id="@i" onclick="DeleteProperty(event)" class="btn btn-danger delete_property">Delete Property</a>
                        </td>
                    </tr>
                        i++;
                    }
                }
            }
            </tbody>
        </table>

        <div class="form-grop">
            <a href="#" onclick="AddProperty()" class="btn btn-success add_property" style="margin-top: 10px">Add Property</a>
        </div>
        <div class="form-group" style="padding-top: 10px">
            <button type="submit" class="btn btn-success">Save Category</button>
        </div>
                }
</div>

    @section Scripts {
        @Scripts.Render("~/bundles/app")
    }